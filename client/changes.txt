diff --git a/client/package.json b/client/package.json
index 6324c0b..d8d60e2 100644
--- a/client/package.json
+++ b/client/package.json
@@ -10,7 +10,6 @@
     "preview": "vite preview"
   },
   "dependencies": {
-    "@chakra-ui/icons": "^2.1.1",
     "@chakra-ui/react": "^2.8.2",
     "@emotion/react": "^11.13.0",
     "@emotion/styled": "^11.13.0",
@@ -25,7 +24,9 @@
     "react": "^18.3.1",
     "react-dom": "^18.3.1",
     "react-hook-form": "^7.52.1",
+    "react-icons": "^5.2.1",
     "react-paginate": "^8.2.0",
+    "react-query": "^3.39.3",
     "react-redux": "^9.1.2",
     "react-table": "^7.8.0",
     "sass": "^1.77.8"
diff --git a/client/src/App.tsx b/client/src/App.tsx
index cbc85e8..b3b55f4 100644
--- a/client/src/App.tsx
+++ b/client/src/App.tsx
@@ -4,19 +4,36 @@ import { store } from "./redux/store";
 import { Home } from "./pages/Home";
 import { ChakraProvider, extendTheme } from "@chakra-ui/react";
 import { MultiSelectTheme } from "chakra-multiselect";
+import { QueryClient, QueryClientProvider } from "react-query";
 
 const theme = extendTheme({
+  config: {
+    initialColorMode: "dark",
+    useSystemColorMode: false,
+  },
+  styles: {
+    global: {
+      body: {
+        bg: "#1a202c",
+        color: "#e2e8f0",
+      },
+    },
+  },
   components: {
     MultiSelect: MultiSelectTheme,
   },
 });
 
+const queryClient = new QueryClient();
+
 export const App: React.FC = () => {
   return (
-    <ReduxProvider store={store}>
-      <ChakraProvider theme={theme}>
-        <Home />
-      </ChakraProvider>
-    </ReduxProvider>
+    <QueryClientProvider client={queryClient}>
+      <ReduxProvider store={store}>
+        <ChakraProvider theme={theme}>
+          <Home />
+        </ChakraProvider>
+      </ReduxProvider>
+    </QueryClientProvider>
   );
 };
diff --git a/client/src/components/CryptoTable.tsx b/client/src/components/CryptoTable.tsx
index 3fdee95..b32f082 100644
--- a/client/src/components/CryptoTable.tsx
+++ b/client/src/components/CryptoTable.tsx
@@ -1,25 +1,48 @@
-import React, { useEffect } from "react";
-import { useDispatch, useSelector } from "react-redux";
-import { AppDispatch, RootState } from "../redux/store";
-import { fetchCryptoList } from "../redux/cryptoSlice";
 import { ReactTable } from "../molecules/ReactTable";
 import { CryptoTableHeader } from "../utils/constants";
+import { useQuery } from "react-query";
+import { fetchCryptoDataQueryKey } from "../utils/crypto-utils/crypto-data.queryKeys";
+import { fetchCryptoData } from "../utils/crypto-utils/crypto-data.service";
+import { Spinner, Text } from "@chakra-ui/react";
+import { useState } from "react";
 
 export const CryptoTable = () => {
-  const dispatch = useDispatch<AppDispatch>();
-  const cryptoData = useSelector((state: RootState) => state.crypto);
+  const [pageNum, setPageNum] = useState(1); //TODO
+  const [recordsPerPage, setRecordsPerPage] = useState(10); //TODO
 
-  useEffect(() => {
-    dispatch(fetchCryptoList());
-  }, [dispatch]);
+  const { data: cryptoData, isLoading: isLoadingCryptoData } = useQuery(
+    [fetchCryptoDataQueryKey, pageNum, recordsPerPage],
+    () =>
+      fetchCryptoData({
+        page: pageNum,
+        limit: recordsPerPage,
+        cryptoCode: "BTC",
+      }),
+    {
+      select(response) {
+        return response.data;
+      },
+    }
+  );
+
+  if (isLoadingCryptoData) {
+    return <Spinner />;
+  }
+
+  if (!cryptoData) {
+    return <Text color={"red"}>Some Error Occured</Text>;
+  }
 
   return (
     <ReactTable
       columns={CryptoTableHeader}
       data={cryptoData.data}
-      fetchMoreData={(pageIndex) => console.log({ pageIndex })}
       pageCount={cryptoData.totalPages}
-      totalCount={cryptoData.total}
+      totalRecords={cryptoData.total}
+      pageNum={pageNum}
+      setPageNum={setPageNum}
+      recordsPerPage={recordsPerPage}
+      setRecordsPerPage={setRecordsPerPage}
     />
   );
 };
diff --git a/client/src/components/SetupForm.tsx b/client/src/components/SetupForm.tsx
index d0473ce..2d415f5 100644
--- a/client/src/components/SetupForm.tsx
+++ b/client/src/components/SetupForm.tsx
@@ -7,110 +7,164 @@ import {
   Box,
   Switch,
   Text,
+  Spinner,
 } from "@chakra-ui/react";
-import { SetupState, updateSetupData } from "../redux/setupSlice";
-import { useDispatch, useSelector } from "react-redux";
-import { AppDispatch, RootState } from "../redux/store";
-import { CryptoCurrencyOptions, CryptoOptions } from "../utils/constants";
+import { fetchCryptoListQueryKey } from "../utils/crypto-utils/crypto-data.queryKeys";
+import { fetchCryptoList } from "../utils/crypto-utils/crypto-data.service";
+import { useMutation, useQuery } from "react-query";
+import { fetSetupQueryKey } from "../utils/setup-utils/setup-data.queryKeys";
+import {
+  fetchSetup,
+  updateSetupData,
+} from "../utils/setup-utils/setup-data.service";
+import { ISetup } from "../utils/setup-utils/setup-data.types";
 import { MultiSelect, Option } from "chakra-multiselect";
+import { CryptoCurrencyOptions } from "../utils/constants";
 
 export const SetupForm = () => {
-  const dispatch = useDispatch<AppDispatch>();
-  const setup = useSelector((state: RootState) => state.setup);
+  const updateSetupMutation = useMutation(updateSetupData);
+  const { handleSubmit, control, reset, getValues } = useForm<ISetup>();
 
-  const { handleSubmit, control } = useForm<SetupState>({
-    defaultValues: setup,
-  });
+  const { isLoading: isLoadingSetup } = useQuery(
+    [fetSetupQueryKey],
+    fetchSetup,
+    {
+      onSuccess(response) {
+        reset(
+          response.data ?? {
+            pollingEnabled: false,
+            pollingIntervalInSec: 10,
+            trackedCryptoCodes: [],
+            currency: "USD",
+          }
+        );
+      },
+    }
+  );
 
-  const onSubmit = (data: SetupState) => {
-    dispatch(updateSetupData(data));
+  const onSubmit = (data: ISetup) => {
+    updateSetupMutation.mutate(data);
   };
 
+  const { data: cryptoOptions = [] } = useQuery(
+    [fetchCryptoListQueryKey],
+    fetchCryptoList,
+    {
+      select(response) {
+        return (response.data ?? []).map(({ code }) => ({
+          value: code,
+          label: code,
+        }));
+      },
+    }
+  );
+
+  console.log({ sfhj: getValues() });
+
   return (
     <Box maxWidth="300px" mx="auto">
       <Text fontSize="md" fontWeight="bold" mb="10px">
         Setup
       </Text>
-      <form onSubmit={handleSubmit(onSubmit)}>
-        <FormControl display="flex" alignItems="center" mb="4">
-          <FormLabel htmlFor="pollingEnabled" mb="0">
-            Polling Enabled
-          </FormLabel>
-          <Controller
-            name="pollingEnabled"
-            control={control}
-            render={({ field }) => (
-              <Switch
-                isChecked={field.value}
-                onChange={(e) => field.onChange(e.target.checked)}
-              />
-            )}
-          />
-        </FormControl>
+      {isLoadingSetup ? (
+        <Spinner />
+      ) : (
+        <form onSubmit={handleSubmit(onSubmit)}>
+          <FormControl display="flex" alignItems="center" mb="4">
+            <FormLabel htmlFor="pollingEnabled" mb="0">
+              Polling Enabled
+            </FormLabel>
+            <Controller
+              name="pollingEnabled"
+              control={control}
+              render={({ field }) => (
+                <Switch
+                  isChecked={field.value}
+                  onChange={(e) => field.onChange(e.target.checked)}
+                />
+              )}
+            />
+          </FormControl>
 
-        <FormControl mb="4">
-          <FormLabel htmlFor="pollingIntervalInSec">
-            Polling Interval (in seconds)
-          </FormLabel>
-          <Controller
-            name="pollingIntervalInSec"
-            control={control}
-            render={({ field }) => (
-              <Input type="number" id="pollingIntervalInSec" {...field} />
-            )}
-          />
-        </FormControl>
+          <FormControl mb="4">
+            <FormLabel htmlFor="pollingIntervalInSec">
+              Polling Interval (in seconds)
+            </FormLabel>
+            <Controller
+              name="pollingIntervalInSec"
+              control={control}
+              render={({ field }) => (
+                <Input type="number" id="pollingIntervalInSec" {...field} />
+              )}
+            />
+          </FormControl>
 
-        <FormControl mb="4">
-          <FormLabel>Tracked Crypto Codes</FormLabel>
-          <Controller
-            name="trackedCryptoCodes"
-            control={control}
-            render={({ field }) => (
-              <MultiSelect
-                {...field}
-                options={CryptoOptions}
-                placeholder="Select tracked crypto codes"
-                value={CryptoOptions.filter((option) =>
-                  field.value.includes(option.value)
-                )}
-                onChange={(selectedOptions) => {
-                  const selectedValues = (selectedOptions as Option[]).map(
-                    (option) => option.value
-                  );
-                  field.onChange(selectedValues);
-                }}
-              />
-            )}
-          />
-        </FormControl>
+          {/* <FormControl mb="4">
+            <FormLabel>Tracked Crypto Codes</FormLabel>
+            <Controller
+              name="trackedCryptoCodes"
+              control={control}
+              render={({ field }) => {
+                return (
+                  <MultiSelect
+                    {...field}
+                    options={cryptoOptions}
+                    placeholder="Select tracked crypto codes"
+                    value={
+                      {}
+                      //   cryptoOptions.filter((option) =>
+                      //   field.value.includes(option.value)
+                      // )
+                    }
+                    onChange={(selectedOptions) => {
+                      // const selectedValues = (selectedOptions as Option[]).map(
+                      //   (option) => option.value
+                      // );
+                      // field.onChange(selectedValues);
+                    }}
+                  />
+                );
+              }}
+            />
+          </FormControl>
 
-        <FormControl mb="4">
-          <FormLabel>Currency</FormLabel>
-          <Controller
-            name="currency"
-            control={control}
-            render={({ field }) => (
-              <MultiSelect
-                {...field}
-                options={CryptoCurrencyOptions}
-                placeholder="Select currency"
-                single
-                value={CryptoCurrencyOptions.find(
-                  (option) => option.value === field?.value
-                )}
-                onChange={(selectedOptions) => {
-                  field.onChange(selectedOptions);
-                }}
-              />
-            )}
-          />
-        </FormControl>
+          <FormControl mb="4">
+            <FormLabel>Currency</FormLabel>
+            <Controller
+              name="currency"
+              control={control}
+              render={({ field }) => {
+                return (
+                  <MultiSelect
+                    {...field}
+                    options={CryptoCurrencyOptions}
+                    placeholder="Select currency"
+                    single
+                    value={
+                      {}
+                      //   CryptoCurrencyOptions.find(
+                      //   (option) => option.value === field?.value
+                      // )
+                    }
+                    onChange={(selectedOptions) => {
+                      // field.onChange(selectedOptions);
+                    }}
+                  />
+                );
+              }}
+            />
+          </FormControl> */}
 
-        <Button mt={4} colorScheme="teal" type="submit">
-          Update
-        </Button>
-      </form>
+          <Button
+            mt={4}
+            colorScheme="teal"
+            type="submit"
+            isLoading={updateSetupMutation.isLoading}
+          >
+            Update
+          </Button>
+        </form>
+      )}
     </Box>
   );
 };
diff --git a/client/src/molecules/ReactTable.module.scss b/client/src/molecules/ReactTable.module.scss
index 2ec9842..4f32504 100644
--- a/client/src/molecules/ReactTable.module.scss
+++ b/client/src/molecules/ReactTable.module.scss
@@ -1,159 +1,230 @@
-$border-color: rgba(152, 157, 163, 0.5);
-$primary-color: #493083;
-
-.tableContainer {
-  max-height: 100%;
-  text-align: left;
-  border: solid;
-  border-width: 0.5px;
-  border-radius: 8px;
-  border-color: $border-color;
-  overflow-x: auto;
-  overflow-y: scroll;
-  // max-width: 90vw;
-}
-.hideScrollbar::-webkit-scrollbar {
-  display: none;
-}
-.checkboxContainer {
-  justify-content: center;
-  display: flex;
-  align-items: center;
-  vertical-align: middle;
-}
-.tableBody {
-  overflow-x: auto;
-  overflow-y: scroll;
-  max-height: 100%;
-}
+// ReactTable.module.scss
 
-.tableBody thead {
-  position: sticky;
-  top: 0px;
-  // z-index: 1;
-  margin: 0 0 0 0;
-}
-.tableBody th {
-  font-family: "ApercuRegularPro";
-  font-style: normal;
-  font-weight: 700;
-  color: #464f60;
-  font-size: 10px;
-  line-height: 15px;
-  padding: 15px;
-  letter-spacing: 0.04em;
-  text-transform: uppercase;
-  background-color: #f5f7fa;
-  //padding-inline: 10px;
+.table {
+  width: 100%;
+  border-collapse: collapse;
+  background-color: #2d3748;
+  color: #e2e8f0;
+
+  thead {
+    tr {
+      th {
+        padding: 1rem;
+        text-align: left;
+        border-bottom: 1px solid #4a5568;
+        color: #edf2f7;
+        font-size: 1.2rem;
+        font-weight: bold;
+      }
+    }
+  }
+
+  tbody {
+    tr {
+      &:nth-of-type(even) {
+        background-color: #4a5568;
+      }
+
+      &:hover {
+        background-color: #2b6cb0;
+      }
+
+      td {
+        padding: 0.8rem;
+        border-bottom: 1px solid #4a5568;
+        color: #e2e8f0;
+        font-size: 1rem;
+
+        &:first-of-type {
+          border-left: 1px solid #4a5568;
+        }
+
+        &:last-of-type {
+          border-right: 1px solid #4a5568;
+        }
+      }
+    }
+  }
 }
-.tableBody tr {
-  border-bottom: 0.5px solid $border-color;
-  //padding-right: 4px;
+
+.header-row {
+  background-color: #1a202c;
 }
-.tableBody td {
-  //vertical-align: top;
-  padding: 15px;
-  white-space: nowrap;
-  overflow: hidden;
-  text-overflow: ellipsis;
-  font-family: "ApercuRegularPro";
-  font-style: normal;
-  font-weight: 600;
-  font-size: 13px;
-  line-height: 18px;
-  color: #171c26;
-  /* identical to box height, or 139% */
-  letter-spacing: 0.02em;
-  //padding-right: 4px;
-  //padding-block: 8px;
+
+.header-cell {
+  border-bottom: 2px solid #4a5568;
 }
 
-/* Customize the label (the container) */
-.checkbox {
-  box-sizing: border-box;
+.body-row {
+  &:nth-of-type(even) {
+    background-color: #4a5568;
+  }
 
-  /* Neutral/White */
+  &:hover {
+    background-color: #2b6cb0;
+  }
+}
 
-  background-color: #ffffff;
-  /* Neutral/L_Grey */
-  border: 1px solid #989da3;
-  border-radius: 4px;
-  cursor: pointer;
-  accent-color: $primary-color;
-  margin-left: 15px;
-  margin-right: 15px;
+.body-cell {
+  border-bottom: 1px solid #4a5568;
 }
 
-/* Hide the browser's default checkbox */
-// .checkbox input {
-//     position: absolute;
-//     opacity: 0;
-//     cursor: pointer;
-//     height: 0;
-//     width: 0;
-// }
 
-/* Create a custom checkbox */
-// .checkmark {
-//     position: absolute;
-//     top: 0;
-//     left: 0;
-//     height: 12px;
-//     width: 12px;
-//     background-color: #eee;
-// }
+// $border-color: rgba(152, 157, 163, 0.5);
+// $primary-color: #281b47;
 
-/* On mouse-over, add a grey background color */
-// .checkbox:hover input ~ .checkmark {
-//     background-color: #ccc;
+// .tableContainer {
+//   max-height: 100%;
+//   text-align: left;
+//   border: solid;
+//   border-width: 0.5px;
+//   border-radius: 8px;
+//   border-color: $border-color;
+//   overflow-x: auto;
+//   overflow-y: scroll;
 // }
-
-// /* When the checkbox is checked, add a blue background */
-// .checkbox input:checked ~ .checkmark {
-//     background-color: $primary-color;
+// .hideScrollbar::-webkit-scrollbar {
+//   display: none;
+// }
+// .checkboxContainer {
+//   justify-content: center;
+//   display: flex;
+//   align-items: center;
+//   vertical-align: middle;
+// }
+// .tableBody {
+//   overflow-x: auto;
+//   overflow-y: scroll;
+//   max-height: 100%;
 // }
 
-// /* Create the checkmark/indicator (hidden when not checked) */
-// .checkmark:after {
-//     content: '';
-//     position: absolute;
-//     display: none;
+// .tableBody thead {
+//   position: sticky;
+//   top: 0px;
+//   // z-index: 1;
+//   margin: 0 0 0 0;
+// }
+// .tableBody th {
+//   font-family: "ApercuRegularPro";
+//   font-style: normal;
+//   font-weight: 700;
+//   color: #464f60;
+//   font-size: 10px;
+//   line-height: 15px;
+//   padding: 15px;
+//   letter-spacing: 0.04em;
+//   text-transform: uppercase;
+//   background-color: #f5f7fa;
+//   //padding-inline: 10px;
+// }
+// .tableBody tr {
+//   border-bottom: 0.5px solid $border-color;
+//   //padding-right: 4px;
 // }
+// .tableBody td {
+//   //vertical-align: top;
+//   padding: 15px;
+//   white-space: nowrap;
+//   overflow: hidden;
+//   text-overflow: ellipsis;
+//   font-family: "ApercuRegularPro";
+//   font-style: normal;
+//   font-weight: 600;
+//   font-size: 13px;
+//   line-height: 18px;
+//   color: #171c26;
+//   /* identical to box height, or 139% */
+//   letter-spacing: 0.02em;
+//   //padding-right: 4px;
+//   //padding-block: 8px;
+// }
+
+// /* Customize the label (the container) */
+// .checkbox {
+//   box-sizing: border-box;
 
-// /* Show the checkmark when checked */
-// .checkbox input:checked ~ .checkmark:after {
-//     display: block;
+//   /* Neutral/White */
+
+//   background-color: #ffffff;
+//   /* Neutral/L_Grey */
+//   border: 1px solid #989da3;
+//   border-radius: 4px;
+//   cursor: pointer;
+//   accent-color: $primary-color;
+//   margin-left: 15px;
+//   margin-right: 15px;
 // }
 
-// /* Style the checkmark/indicator */
-// .checkbox .checkmark:after {
-//     left: 9px;
-//     top: 5px;
-//     width: 2px;
-//     height: 5px;
-//     border: solid white;
-//     border-width: 0 3px 3px 0;
-//     -webkit-transform: rotate(45deg);
-//     -ms-transform: rotate(45deg);
-//     transform: rotate(45deg);
+// /* Hide the browser's default checkbox */
+// // .checkbox input {
+// //     position: absolute;
+// //     opacity: 0;
+// //     cursor: pointer;
+// //     height: 0;
+// //     width: 0;
+// // }
+
+// /* Create a custom checkbox */
+// // .checkmark {
+// //     position: absolute;
+// //     top: 0;
+// //     left: 0;
+// //     height: 12px;
+// //     width: 12px;
+// //     background-color: #eee;
+// // }
+
+// /* On mouse-over, add a grey background color */
+// // .checkbox:hover input ~ .checkmark {
+// //     background-color: #ccc;
+// // }
+
+// // /* When the checkbox is checked, add a blue background */
+// // .checkbox input:checked ~ .checkmark {
+// //     background-color: $primary-color;
+// // }
+
+// // /* Create the checkmark/indicator (hidden when not checked) */
+// // .checkmark:after {
+// //     content: '';
+// //     position: absolute;
+// //     display: none;
+// // }
+
+// // /* Show the checkmark when checked */
+// // .checkbox input:checked ~ .checkmark:after {
+// //     display: block;
+// // }
+
+// // /* Style the checkmark/indicator */
+// // .checkbox .checkmark:after {
+// //     left: 9px;
+// //     top: 5px;
+// //     width: 2px;
+// //     height: 5px;
+// //     border: solid white;
+// //     border-width: 0 3px 3px 0;
+// //     -webkit-transform: rotate(45deg);
+// //     -ms-transform: rotate(45deg);
+// //     transform: rotate(45deg);
+// // }
+// .pagination {
+//   display: flex;
+//   bottom: 0;
+//   width: "100%";
+//   position: sticky;
+//   left: 0;
+//   right: 0;
+//   flex-direction: row;
+//   justify-content: space-between;
+//   align-items: center;
+//   padding: 12px 20px;
+//   align-self: stretch;
+//   gap: 20px;
+
+//   // width: 100%;
+//   height: 44px;
+
+//   background: rgba(8, 21, 35, 0.6);
+//   backdrop-filter: blur(4px);
 // }
-.pagination {
-  display: flex;
-  bottom: 0;
-  width: "100%";
-  position: sticky;
-  left: 0;
-  right: 0;
-  flex-direction: row;
-  justify-content: space-between;
-  align-items: center;
-  padding: 12px 20px;
-  align-self: stretch;
-  gap: 20px;
-
-  // width: 100%;
-  height: 44px;
-
-  background: rgba(167, 186, 206, 0.6);
-  backdrop-filter: blur(4px);
-}
diff --git a/client/src/molecules/ReactTable.tsx b/client/src/molecules/ReactTable.tsx
index c5978e8..dc1195e 100644
--- a/client/src/molecules/ReactTable.tsx
+++ b/client/src/molecules/ReactTable.tsx
@@ -1,4 +1,3 @@
-import React from "react";
 import {
   useTable,
   usePagination,
@@ -9,55 +8,65 @@ import {
   UsePaginationState,
   TableState,
 } from "react-table";
-import ReactPaginate from "react-paginate";
 import styles from "./ReactTable.module.scss"; // Importing the SCSS file
+import { Button, HStack } from "@chakra-ui/react";
+import { Pagination } from "./Pagination";
 
 interface ReactTableProps<T extends object> {
   columns: Column<T>[];
   data: T[];
-  fetchMoreData: (pageIndex: number) => void;
   pageCount: number;
-  totalCount: number;
+  totalRecords: number;
+  pageNum: number;
+  setPageNum: (pageNum: number) => void;
+  recordsPerPage: number;
+  setRecordsPerPage: (recordsPerPage: number) => void;
 }
 
 interface TableStateWithPagination<T extends object>
   extends TableState<T>,
     UsePaginationState<T> {}
 
-const ReactTable = <T extends object>({
+export const ReactTable = <T extends object>({
   columns,
   data,
-  fetchMoreData,
   pageCount,
-  totalCount,
+  totalRecords,
+  pageNum,
+  setPageNum,
+  recordsPerPage,
+  setRecordsPerPage,
 }: ReactTableProps<T>) => {
-  const {
-    getTableProps,
-    getTableBodyProps,
-    headerGroups,
-    prepareRow,
-    page,
-    state,
-  } = useTable<T>(
-    {
-      columns,
-      data,
-      initialState: { pageIndex: 0 } as Partial<TableStateWithPagination<T>>,
-      manualPagination: true,
-      pageCount,
-    } as TableOptions<T> & {
-      manualPagination: boolean;
-      pageCount: number;
-    },
-    usePagination
-  ) as TableInstance<T> & UsePaginationInstanceProps<T> & TableOptions<T>;
+  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, page } =
+    useTable<T>(
+      {
+        columns,
+        data,
+        initialState: { pageIndex: 0, pageSize: 10 } as Partial<
+          TableStateWithPagination<T>
+        >,
+        manualPagination: true,
+        pageCount,
+      } as TableOptions<T> & {
+        manualPagination: boolean;
+        pageCount: number;
+      },
+      usePagination
+    ) as TableInstance<T> & UsePaginationInstanceProps<T> & TableOptions<T>;
 
-  const { pageIndex } = state as TableStateWithPagination<T>;
+  const handleNext = () => {
+    setPageNum(pageNum + 1);
+  };
 
-  const handlePageClick = (selectedItem: { selected: number }) => {
-    fetchMoreData(selectedItem.selected);
+  const handlePrev = () => {
+    setPageNum(pageNum - 1);
   };
 
+  const isPrevDisabled = pageNum === 1;
+  const isNextDisabled = pageNum === pageCount;
+
+  console.log({ isPrevDisabled, isNextDisabled, pageNum });
+
   return (
     <div>
       <table {...getTableProps()} className={styles.table}>
@@ -93,27 +102,17 @@ const ReactTable = <T extends object>({
           })}
         </tbody>
       </table>
-      <div className={styles["pagination-container"]}>
-        <ReactPaginate
-          previousLabel={"< previous"}
-          nextLabel={"next >"}
-          breakLabel={"..."}
-          breakClassName={"break-me"}
-          pageCount={pageCount}
-          marginPagesDisplayed={2}
-          pageRangeDisplayed={5}
-          onPageChange={handlePageClick}
-          containerClassName={styles.pagination}
-          activeClassName={"active"}
-          previousClassName={"previous"}
-          nextClassName={"next"}
-          disabledClassName={"disabled"}
-        />
-      </div>
-      <div className={styles["page-info"]}>Current Page: {pageIndex + 1}</div>{" "}
-      <div className={styles["page-info"]}>Total Count: {totalCount}</div>{" "}
+      <Pagination
+        handleNext={handleNext}
+        handlePrev={handlePrev}
+        pageCount={pageCount}
+        pageNum={pageNum}
+        setPageNum={setPageNum}
+        totalRecords={totalRecords}
+        recordsPerPage={recordsPerPage}
+        setRecordsPerPage={setRecordsPerPage}
+      />
+      <hr />
     </div>
   );
 };
-
-export default ReactTable;
diff --git a/client/src/pages/Home.tsx b/client/src/pages/Home.tsx
index b178eed..2b42a78 100644
--- a/client/src/pages/Home.tsx
+++ b/client/src/pages/Home.tsx
@@ -1,4 +1,3 @@
-import { SetupComponent } from "../components/SetupComponent";
 import { HStack } from "@chakra-ui/react";
 import { AppDescription } from "../components/AppDescription";
 import { CryptoTable } from "../components/CryptoTable";
@@ -15,10 +14,8 @@ export const Home = () => {
         padding: "30px 50px",
       }}
     >
-      <AppDescription />
       <CryptoTable />
       <SetupForm />
-      {/* <SetupComponent /> */}
     </HStack>
   );
 };
diff --git a/client/src/redux/cryptoSlice.ts b/client/src/redux/cryptoSlice.ts
deleted file mode 100644
index c007a73..0000000
--- a/client/src/redux/cryptoSlice.ts
+++ /dev/null
@@ -1,78 +0,0 @@
-import { createAsyncThunk, createSlice, PayloadAction } from "@reduxjs/toolkit";
-import axios from "axios";
-
-export interface ICrypto {
-  code: string;
-  currency: string;
-  name: string;
-  symbol: string;
-  rank: number;
-  age: number;
-  png32: string;
-  exchanges: number;
-  markets: number;
-  allTimeHighUSD: number;
-  rate: number;
-  volume: number;
-  cap: number;
-  liquidity: number;
-  delta: {
-    hour: number;
-    day: number;
-    week: number;
-    month: number;
-    quarter: number;
-    year: number;
-  };
-}
-
-export interface ICryptoState {
-  data: ICrypto[];
-  limit: number;
-  page: number;
-  total: number;
-  totalPages: number;
-}
-
-const initialState: ICryptoState = {
-  data: [],
-  limit: 10,
-  page: 1,
-  total: 0,
-  totalPages: 0,
-};
-
-type AsyncThunkConfig = Record<string, never>;
-
-export const fetchCryptoList = createAsyncThunk<
-  ICryptoState,
-  void,
-  AsyncThunkConfig
->("crypto/fetchCryptoList", async () => {
-  const response = await axios.get("/api/crypto/data");
-  return response.data;
-});
-
-const cryptoSlice = createSlice({
-  name: "crypto",
-  initialState,
-  reducers: {
-    setCryptoData: (data: any) => {
-      return { ...initialState, data: data };
-    },
-  },
-  extraReducers: (builder) => {
-    builder
-      .addCase(
-        fetchCryptoList.fulfilled,
-        (state, action: PayloadAction<ICryptoState>) => {
-          return action.payload;
-        }
-      )
-      .addCase(fetchCryptoList.rejected, (state, action) => {
-        console.error("Failed to fetch crypto data:", action.error.message);
-      });
-  },
-});
-
-export default cryptoSlice.reducer;
diff --git a/client/src/redux/setupSlice.ts b/client/src/redux/setupSlice.ts
index 9392423..4f1bd7d 100644
--- a/client/src/redux/setupSlice.ts
+++ b/client/src/redux/setupSlice.ts
@@ -1,100 +1,30 @@
-import { createAsyncThunk, createSlice, PayloadAction } from "@reduxjs/toolkit";
-import axios from "axios";
-
-export interface SetupState {
-  pollingEnabled: boolean;
-  pollingIntervalInSec: number;
-  trackedCryptoCodes: string[];
-  currency: string;
-}
-
-const initialState: SetupState = {
-  pollingEnabled: false,
-  pollingIntervalInSec: 10,
-  trackedCryptoCodes: [],
-  currency: "USD",
-};
-
-type AsyncThunkConfig = Record<string, never>;
-
-export const fetchSetupData = createAsyncThunk<
-  SetupState,
-  void,
-  AsyncThunkConfig
->("setup/fetchSetupData", async () => {
-  const response = await axios.get<SetupState>("/api/setup");
-  return response.data;
-});
-
-export const updateSetupData = createAsyncThunk<
-  SetupState,
-  SetupState,
-  AsyncThunkConfig
->("setup/updateSetupData", async (setupData) => {
-  const response = await axios.post<SetupState>("/api/setup", setupData);
-  return response.data;
-});
-
-const setupSlice = createSlice({
-  name: "setup",
-  initialState,
-  reducers: {
-    setPollingEnabled(state, action: PayloadAction<boolean>) {
-      state.pollingEnabled = action.payload;
-    },
-    setPollingInterval(state, action: PayloadAction<number>) {
-      state.pollingIntervalInSec = action.payload;
-    },
-    setTrackedCryptoCodes(state, action: PayloadAction<string[]>) {
-      state.trackedCryptoCodes = action.payload;
-    },
-    setCurrency(state, action: PayloadAction<string>) {
-      state.currency = action.payload;
-    },
-  },
-  extraReducers: (builder) => {
-    builder
-      .addCase(
-        fetchSetupData.fulfilled,
-        (state, action: PayloadAction<SetupState>) => {
-          console.log({
-            mishra: {
-              ...action.payload,
-              currency: action.payload.currency.length
-                ? action.payload
-                : initialState.currency,
-            },
-            action,
-            state,
-          });
-          return {
-            ...action.payload,
-            currency: action.payload.currency.length
-              ? action.payload
-              : initialState.currency,
-          };
-        }
-      )
-      .addCase(
-        updateSetupData.fulfilled,
-        (state, action: PayloadAction<SetupState>) => {
-          return action.payload;
-        }
-      )
-      .addCase(fetchSetupData.rejected, (state, action) => {
-        console.error("Failed to fetch setup data:", action.error.message);
-      })
-      .addCase(updateSetupData.rejected, (state, action) => {
-        console.error("Failed to update setup data:", action.error.message);
-      });
-  },
-});
-
-export const {
-  setPollingEnabled,
-  setPollingInterval,
-  setTrackedCryptoCodes,
-  setCurrency,
-} = setupSlice.actions;
-
-export default setupSlice.reducer;
+// import { createSlice, PayloadAction } from "@reduxjs/toolkit";
+// import { ISetup } from "../utils/setup-utils/setup-data.types";
+
+// const setupSlice = createSlice<ISetup>({
+//   name: "setup",
+//   ,
+//   reducers: {
+//     setPollingEnabled(state, action: PayloadAction<boolean>) {
+//       state.pollingEnabled = action.payload;
+//     },
+//     setPollingInterval(state, action: PayloadAction<number>) {
+//       state.pollingIntervalInSec = action.payload;
+//     },
+//     setTrackedCryptoCodes(state, action: PayloadAction<string[]>) {
+//       state.trackedCryptoCodes = action.payload;
+//     },
+//     setCurrency(state, action: PayloadAction<string>) {
+//       state.currency = action.payload;
+//     },
+//   },
+// });
+
+// export const {
+//   setPollingEnabled,
+//   setPollingInterval,
+//   setTrackedCryptoCodes,
+//   setCurrency,
+// } = setupSlice.actions;
+
+// export default setupSlice.reducer;
diff --git a/client/src/redux/store.ts b/client/src/redux/store.ts
index 451e0d2..3af58ee 100644
--- a/client/src/redux/store.ts
+++ b/client/src/redux/store.ts
@@ -1,21 +1,14 @@
 import { configureStore } from "@reduxjs/toolkit";
-import setupReducer from "./setupSlice";
-import cryptoReducer from "./cryptoSlice";
+// import setupReducer from "./setupSlice";
 
 export const store = configureStore({
   reducer: {
-    setup: setupReducer,
-    crypto: cryptoReducer,
-  },
-  preloadedState: {
-    setup: JSON.parse(localStorage.getItem("setup") || "{}"),
-    crypto: JSON.parse(localStorage.getItem("crypto") || "[]"),
+    // setup: setupReducer,
   },
 });
 
 store.subscribe(() => {
   localStorage.setItem("setup", JSON.stringify(store.getState().setup));
-  localStorage.setItem("crypto", JSON.stringify(store.getState().crypto));
 });
 
 export type RootState = ReturnType<typeof store.getState>;
diff --git a/client/src/utils/constants.ts b/client/src/utils/constants.ts
index c4105e6..a2c6185 100644
--- a/client/src/utils/constants.ts
+++ b/client/src/utils/constants.ts
@@ -1,6 +1,5 @@
 import { Column } from "react-table";
-import { ICrypto } from "../redux/cryptoSlice";
-import { SelectProps } from "@chakra-ui/react";
+import { ICrypto } from "./crypto-utils/crypto-data.types";
 
 export const CryptoTableHeader: Column<ICrypto>[] = [
   {
@@ -17,26 +16,5 @@ export const CryptoTableHeader: Column<ICrypto>[] = [
 
 export const CryptoCurrencyOptions = [
   { label: "USD", value: "USD" },
-  { label: "EUR", value: "EUR" },
-  { label: "JPY", value: "JPY" },
-  { label: "GBP", value: "GBP" },
-  { label: "AUD", value: "AUD" },
-  { label: "CAD", value: "CAD" },
-  { label: "CHF", value: "CHF" },
-  { label: "CNY", value: "CNY" },
-  { label: "SEK", value: "SEK" },
-  { label: "NZD", value: "NZD" },
-];
-
-export const CryptoOptions = [
-  { label: "USD", value: "USD" },
-  { label: "EUR", value: "EUR" },
-  { label: "JPY", value: "JPY" },
-  { label: "GBP", value: "GBP" },
-  { label: "AUD", value: "AUD" },
-  { label: "CAD", value: "CAD" },
-  { label: "CHF", value: "CHF" },
-  { label: "CNY", value: "CNY" },
-  { label: "SEK", value: "SEK" },
-  { label: "NZD", value: "NZD" },
+  { label: "INR", value: "INR" },
 ];
diff --git a/client/yarn.lock b/client/yarn.lock
index 7ce1f53..a5a21b9 100644
--- a/client/yarn.lock
+++ b/client/yarn.lock
@@ -148,7 +148,7 @@
   dependencies:
     "@babel/helper-plugin-utils" "^7.24.7"
 
-"@babel/runtime@^7.0.0", "@babel/runtime@^7.12.0", "@babel/runtime@^7.12.13", "@babel/runtime@^7.12.5", "@babel/runtime@^7.18.3", "@babel/runtime@^7.5.5", "@babel/runtime@^7.8.7":
+"@babel/runtime@^7.0.0", "@babel/runtime@^7.12.0", "@babel/runtime@^7.12.13", "@babel/runtime@^7.12.5", "@babel/runtime@^7.18.3", "@babel/runtime@^7.23.8", "@babel/runtime@^7.5.5", "@babel/runtime@^7.6.2", "@babel/runtime@^7.7.2", "@babel/runtime@^7.8.7":
   version "7.25.0"
   resolved "https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.25.0.tgz#3af9a91c1b739c569d5d80cc917280919c544ecb"
   integrity sha512-7dRy4DwXwtzBrPbZflqxnvfxLF8kdZXPkhymtDeFoFqE6ldzjQFgYTtYIFARcLEYDrqfBfYcZt1WqFxRoyC9Rw==
@@ -384,13 +384,6 @@
   dependencies:
     "@chakra-ui/shared-utils" "2.0.5"
 
-"@chakra-ui/icons@^2.1.1":
-  version "2.1.1"
-  resolved "https://registry.yarnpkg.com/@chakra-ui/icons/-/icons-2.1.1.tgz#58ff0f9e703f2f4f89debd600ce4e438f43f9c9a"
-  integrity sha512-3p30hdo4LlRZTT5CwoAJq3G9fHI0wDc0pBaMHj4SUn0yomO+RcDRlzhdXqdr5cVnzax44sqXJVnf3oQG0eI+4g==
-  dependencies:
-    "@chakra-ui/icon" "3.2.0"
-
 "@chakra-ui/image@2.1.0":
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/@chakra-ui/image/-/image-2.1.0.tgz#6c205f1ca148e3bf58345b0b5d4eb3d959eb9f87"
@@ -1747,6 +1740,11 @@ balanced-match@^1.0.0:
   resolved "https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.2.tgz#e83e3a7e3f300b34cb9d87f615fa0cbf357690ee"
   integrity sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==
 
+big-integer@^1.6.16:
+  version "1.6.52"
+  resolved "https://registry.yarnpkg.com/big-integer/-/big-integer-1.6.52.tgz#60a887f3047614a8e1bffe5d7173490a97dc8c85"
+  integrity sha512-QxD8cf2eVqJOOz63z6JIN9BzvVs/dlySa5HGSBH5xtR8dPteIRQnBxxKqkNTiT6jbDTF6jAfrd4oMcND9RGbQg==
+
 binary-extensions@^2.0.0:
   version "2.3.0"
   resolved "https://registry.yarnpkg.com/binary-extensions/-/binary-extensions-2.3.0.tgz#f6e14a97858d327252200242d4ccfe522c445522"
@@ -1774,6 +1772,20 @@ braces@^3.0.3, braces@~3.0.2:
   dependencies:
     fill-range "^7.1.1"
 
+broadcast-channel@^3.4.1:
+  version "3.7.0"
+  resolved "https://registry.yarnpkg.com/broadcast-channel/-/broadcast-channel-3.7.0.tgz#2dfa5c7b4289547ac3f6705f9c00af8723889937"
+  integrity sha512-cIAKJXAxGJceNZGTZSBzMxzyOn72cVgPnKx4dc6LRjQgbaJUQqhy5rzL3zbMxkMWsGKkv2hSFkPRMEXfoMZ2Mg==
+  dependencies:
+    "@babel/runtime" "^7.7.2"
+    detect-node "^2.1.0"
+    js-sha3 "0.8.0"
+    microseconds "0.2.0"
+    nano-time "1.0.0"
+    oblivious-set "1.0.0"
+    rimraf "3.0.2"
+    unload "2.2.0"
+
 browserslist@^4.23.1:
   version "4.23.2"
   resolved "https://registry.yarnpkg.com/browserslist/-/browserslist-4.23.2.tgz#244fe803641f1c19c28c48c4b6ec9736eb3d32ed"
@@ -1955,6 +1967,11 @@ detect-node-es@^1.1.0:
   resolved "https://registry.yarnpkg.com/detect-node-es/-/detect-node-es-1.1.0.tgz#163acdf643330caa0b4cd7c21e7ee7755d6fa493"
   integrity sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==
 
+detect-node@^2.0.4, detect-node@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/detect-node/-/detect-node-2.1.0.tgz#c9c70775a49c3d03bc2c06d9a73be550f978f8b1"
+  integrity sha512-T0NIuQpnTvFDATNuHN5roPwSBG83rFsuO+MXXH9/3N1eFbn4wcPjttvjMLEPWJ0RGUYgQE7cGgS3tNxbqCGM7g==
+
 dir-glob@^3.0.1:
   version "3.0.1"
   resolved "https://registry.yarnpkg.com/dir-glob/-/dir-glob-3.0.1.tgz#56dbf73d992a4a93ba1584f4534063fd2e41717f"
@@ -2440,6 +2457,11 @@ isexe@^2.0.0:
   resolved "https://registry.yarnpkg.com/isexe/-/isexe-2.0.0.tgz#e8fbf374dc556ff8947a10dcb0572d633f2cfa10"
   integrity sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==
 
+js-sha3@0.8.0:
+  version "0.8.0"
+  resolved "https://registry.yarnpkg.com/js-sha3/-/js-sha3-0.8.0.tgz#b9b7a5da73afad7dedd0f8c463954cbde6818840"
+  integrity sha512-gF1cRrHhIzNfToc802P800N8PpXS+evLLXfsVpowqmAFR9uwbi89WvXg2QspOmXL8QL86J4T1EpFu+yUkwJY3Q==
+
 "js-tokens@^3.0.0 || ^4.0.0", js-tokens@^4.0.0:
   version "4.0.0"
   resolved "https://registry.yarnpkg.com/js-tokens/-/js-tokens-4.0.0.tgz#19203fb59991df98e3a287050d4647cdeaf32499"
@@ -2533,6 +2555,14 @@ lru-cache@^5.1.1:
   dependencies:
     yallist "^3.0.2"
 
+match-sorter@^6.0.2:
+  version "6.3.4"
+  resolved "https://registry.yarnpkg.com/match-sorter/-/match-sorter-6.3.4.tgz#afa779d8e922c81971fbcb4781c7003ace781be7"
+  integrity sha512-jfZW7cWS5y/1xswZo8VBOdudUiSd9nifYRWphc9M5D/ee4w4AoXLgBEdRbgVaxbMuagBPeUC5y2Hi8DO6o9aDg==
+  dependencies:
+    "@babel/runtime" "^7.23.8"
+    remove-accents "0.5.0"
+
 memoize-one@^6.0.0:
   version "6.0.0"
   resolved "https://registry.yarnpkg.com/memoize-one/-/memoize-one-6.0.0.tgz#b2591b871ed82948aee4727dc6abceeeac8c1045"
@@ -2551,6 +2581,11 @@ micromatch@^4.0.4:
     braces "^3.0.3"
     picomatch "^2.3.1"
 
+microseconds@0.2.0:
+  version "0.2.0"
+  resolved "https://registry.yarnpkg.com/microseconds/-/microseconds-0.2.0.tgz#233b25f50c62a65d861f978a4a4f8ec18797dc39"
+  integrity sha512-n7DHHMjR1avBbSpsTBj6fmMGh2AGrifVV4e+WYc3Q9lO+xnSZ3NyhcBND3vzzatt05LFhoKFRxrIyklmLlUtyA==
+
 mime-db@1.52.0:
   version "1.52.0"
   resolved "https://registry.yarnpkg.com/mime-db/-/mime-db-1.52.0.tgz#bbabcdc02859f4987301c856e3387ce5ec43bf70"
@@ -2587,6 +2622,13 @@ multiselect-react-dropdown@^2.0.25:
   resolved "https://registry.yarnpkg.com/multiselect-react-dropdown/-/multiselect-react-dropdown-2.0.25.tgz#0c8d16f20d78023d5be2f3af4f15a4a164b6b427"
   integrity sha512-z8kUSyBNOuV7vn4Dk35snzXWtIfTdSEEXhgDdLMvOmR+xJFx35vc1voUlSuOvrk3khb+hXC219Qs9szOvNm25Q==
 
+nano-time@1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/nano-time/-/nano-time-1.0.0.tgz#b0554f69ad89e22d0907f7a12b0993a5d96137ef"
+  integrity sha512-flnngywOoQ0lLQOTRNexn2gGSNuM9bKj9RZAWSzhQ+UJYaAFG9bac4DW9VHjUAzrOaIcajHybCTHe/bkvozQqA==
+  dependencies:
+    big-integer "^1.6.16"
+
 nanoid@^3.3.7:
   version "3.3.7"
   resolved "https://registry.yarnpkg.com/nanoid/-/nanoid-3.3.7.tgz#d0c301a691bc8d54efa0a2226ccf3fe2fd656bd8"
@@ -2612,6 +2654,11 @@ object-assign@^4.1.1:
   resolved "https://registry.yarnpkg.com/object-assign/-/object-assign-4.1.1.tgz#2109adc7965887cfc05cbbd442cac8bfbb360863"
   integrity sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==
 
+oblivious-set@1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/oblivious-set/-/oblivious-set-1.0.0.tgz#c8316f2c2fb6ff7b11b6158db3234c49f733c566"
+  integrity sha512-z+pI07qxo4c2CulUHCDf9lcqDlMSo72N/4rLUpRXf6fu+q8vjt8y0xS+Tlf8NTJDdTXHbdeO1n3MlbctwEoXZw==
+
 once@^1.3.0:
   version "1.4.0"
   resolved "https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1"
@@ -2772,6 +2819,11 @@ react-hook-form@^7.52.1:
   resolved "https://registry.yarnpkg.com/react-hook-form/-/react-hook-form-7.52.1.tgz#ec2c96437b977f8b89ae2d541a70736c66284852"
   integrity sha512-uNKIhaoICJ5KQALYZ4TOaOLElyM+xipord+Ha3crEFhTntdLvWZqVY49Wqd/0GiVCA/f9NjemLeiNPjG7Hpurg==
 
+react-icons@^5.2.1:
+  version "5.2.1"
+  resolved "https://registry.yarnpkg.com/react-icons/-/react-icons-5.2.1.tgz#28c2040917b2a2eda639b0f797bff1888e018e4a"
+  integrity sha512-zdbW5GstTzXaVKvGSyTaBalt7HSfuK5ovrzlpyiWHAFXndXTdd/1hdDHI4xBM1Mn7YriT6aqESucFl9kEXzrdw==
+
 react-is@^16.13.1, react-is@^16.7.0:
   version "16.13.1"
   resolved "https://registry.yarnpkg.com/react-is/-/react-is-16.13.1.tgz#789729a4dc36de2999dc156dd6c1d9c18cea56a4"
@@ -2784,6 +2836,15 @@ react-paginate@^8.2.0:
   dependencies:
     prop-types "^15"
 
+react-query@^3.39.3:
+  version "3.39.3"
+  resolved "https://registry.yarnpkg.com/react-query/-/react-query-3.39.3.tgz#4cea7127c6c26bdea2de5fb63e51044330b03f35"
+  integrity sha512-nLfLz7GiohKTJDuT4us4X3h/8unOh+00MLb2yJoGTPjxKs2bc1iDhkNx2bd5MKklXnOD3NrVZ+J2UXujA5In4g==
+  dependencies:
+    "@babel/runtime" "^7.5.5"
+    broadcast-channel "^3.4.1"
+    match-sorter "^6.0.2"
+
 react-redux@^9.1.2:
   version "9.1.2"
   resolved "https://registry.yarnpkg.com/react-redux/-/react-redux-9.1.2.tgz#deba38c64c3403e9abd0c3fbeab69ffd9d8a7e4b"
@@ -2884,6 +2945,11 @@ regenerator-runtime@^0.14.0:
   resolved "https://registry.yarnpkg.com/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz#356ade10263f685dda125100cd862c1db895327f"
   integrity sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==
 
+remove-accents@0.5.0:
+  version "0.5.0"
+  resolved "https://registry.yarnpkg.com/remove-accents/-/remove-accents-0.5.0.tgz#77991f37ba212afba162e375b627631315bed687"
+  integrity sha512-8g3/Otx1eJaVD12e31UbJj1YzdtVvzH85HV7t+9MJYk/u3XmkOUJ5Ys9wQrf9PCPK8+xn4ymzqYCiZl6QWKn+A==
+
 reselect@^5.1.0:
   version "5.1.1"
   resolved "https://registry.yarnpkg.com/reselect/-/reselect-5.1.1.tgz#c766b1eb5d558291e5e550298adb0becc24bb72e"
@@ -2908,7 +2974,7 @@ reusify@^1.0.4:
   resolved "https://registry.yarnpkg.com/reusify/-/reusify-1.0.4.tgz#90da382b1e126efc02146e90845a88db12925d76"
   integrity sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==
 
-rimraf@^3.0.2:
+rimraf@3.0.2, rimraf@^3.0.2:
   version "3.0.2"
   resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-3.0.2.tgz#f1a5402ba6220ad52cc1282bac1ae3aa49fd061a"
   integrity sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==
@@ -3095,6 +3161,14 @@ typescript@^5.2.2:
   resolved "https://registry.yarnpkg.com/typescript/-/typescript-5.5.4.tgz#d9852d6c82bad2d2eda4fd74a5762a8f5909e9ba"
   integrity sha512-Mtq29sKDAEYP7aljRgtPOpTvOfbwRWlS6dPRzwjdE+C0R4brX/GUyhHSecbHMFLNBLcJIPt9nl9yG5TZ1weH+Q==
 
+unload@2.2.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/unload/-/unload-2.2.0.tgz#ccc88fdcad345faa06a92039ec0f80b488880ef7"
+  integrity sha512-B60uB5TNBLtN6/LsgAf3udH9saB5p7gqJwcFfbOEZ8BcBHnGwCf6G/TGiEqkRAxX7zAFIUtzdrXQSdL3Q/wqNA==
+  dependencies:
+    "@babel/runtime" "^7.6.2"
+    detect-node "^2.0.4"
+
 update-browserslist-db@^1.1.0:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/update-browserslist-db/-/update-browserslist-db-1.1.0.tgz#7ca61c0d8650766090728046e416a8cde682859e"
diff --git a/server/yarn.lock b/server/yarn.lock
index de74bc1..f63b3ea 100644
--- a/server/yarn.lock
+++ b/server/yarn.lock
@@ -2,6 +2,13 @@
 # yarn lockfile v1
 
 
+"@babel/runtime@^7.23.8", "@babel/runtime@^7.5.5", "@babel/runtime@^7.6.2", "@babel/runtime@^7.7.2":
+  version "7.25.0"
+  resolved "https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.25.0.tgz#3af9a91c1b739c569d5d80cc917280919c544ecb"
+  integrity sha512-7dRy4DwXwtzBrPbZflqxnvfxLF8kdZXPkhymtDeFoFqE6ldzjQFgYTtYIFARcLEYDrqfBfYcZt1WqFxRoyC9Rw==
+  dependencies:
+    regenerator-runtime "^0.14.0"
+
 "@cspotcode/source-map-support@^0.8.0":
   version "0.8.1"
   resolved "https://registry.yarnpkg.com/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz#00629c35a688e05a88b1cda684fb9d5e73f000a1"
@@ -101,11 +108,6 @@
   resolved "https://registry.yarnpkg.com/@types/http-errors/-/http-errors-2.0.4.tgz#7eb47726c391b7345a6ec35ad7f4de469cf5ba4f"
   integrity sha512-D0CFMMtydbJAegzOyHjtiKPLlvnm3iTZyZRSZoLq2mRhDdmLfIWOCYPfQJ4cu2erKghU++QvjcUjp/5h7hESpA==
 
-"@types/lodash@^4.17.7":
-  version "4.17.7"
-  resolved "https://registry.yarnpkg.com/@types/lodash/-/lodash-4.17.7.tgz#2f776bcb53adc9e13b2c0dfd493dfcbd7de43612"
-  integrity sha512-8wTvZawATi/lsmNu10/j2hk1KEP0IvjubqPE3cu1Xz7xfXXt5oCq3SNUz4fMIP4XGF9Ky+Ue2tBA3hcS7LSBlA==
-
 "@types/mime@^1":
   version "1.3.5"
   resolved "https://registry.yarnpkg.com/@types/mime/-/mime-1.3.5.tgz#1ef302e01cf7d2b5a0fa526790c9123bf1d06690"
@@ -208,6 +210,11 @@ axios@^1.7.2:
     form-data "^4.0.0"
     proxy-from-env "^1.1.0"
 
+balanced-match@^1.0.0:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.2.tgz#e83e3a7e3f300b34cb9d87f615fa0cbf357690ee"
+  integrity sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==
+
 basic-auth@~2.0.1:
   version "2.0.1"
   resolved "https://registry.yarnpkg.com/basic-auth/-/basic-auth-2.0.1.tgz#b998279bf47ce38344b4f3cf916d4679bbf51e3a"
@@ -215,6 +222,11 @@ basic-auth@~2.0.1:
   dependencies:
     safe-buffer "5.1.2"
 
+big-integer@^1.6.16:
+  version "1.6.52"
+  resolved "https://registry.yarnpkg.com/big-integer/-/big-integer-1.6.52.tgz#60a887f3047614a8e1bffe5d7173490a97dc8c85"
+  integrity sha512-QxD8cf2eVqJOOz63z6JIN9BzvVs/dlySa5HGSBH5xtR8dPteIRQnBxxKqkNTiT6jbDTF6jAfrd4oMcND9RGbQg==
+
 body-parser@1.20.2:
   version "1.20.2"
   resolved "https://registry.yarnpkg.com/body-parser/-/body-parser-1.20.2.tgz#6feb0e21c4724d06de7ff38da36dad4f57a747fd"
@@ -233,6 +245,28 @@ body-parser@1.20.2:
     type-is "~1.6.18"
     unpipe "1.0.0"
 
+brace-expansion@^1.1.7:
+  version "1.1.11"
+  resolved "https://registry.yarnpkg.com/brace-expansion/-/brace-expansion-1.1.11.tgz#3c7fcbf529d87226f3d2f52b966ff5271eb441dd"
+  integrity sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==
+  dependencies:
+    balanced-match "^1.0.0"
+    concat-map "0.0.1"
+
+broadcast-channel@^3.4.1:
+  version "3.7.0"
+  resolved "https://registry.yarnpkg.com/broadcast-channel/-/broadcast-channel-3.7.0.tgz#2dfa5c7b4289547ac3f6705f9c00af8723889937"
+  integrity sha512-cIAKJXAxGJceNZGTZSBzMxzyOn72cVgPnKx4dc6LRjQgbaJUQqhy5rzL3zbMxkMWsGKkv2hSFkPRMEXfoMZ2Mg==
+  dependencies:
+    "@babel/runtime" "^7.7.2"
+    detect-node "^2.1.0"
+    js-sha3 "0.8.0"
+    microseconds "0.2.0"
+    nano-time "1.0.0"
+    oblivious-set "1.0.0"
+    rimraf "3.0.2"
+    unload "2.2.0"
+
 bson@^6.7.0:
   version "6.8.0"
   resolved "https://registry.yarnpkg.com/bson/-/bson-6.8.0.tgz#5063c41ba2437c2b8ff851b50d9e36cb7aaa7525"
@@ -261,6 +295,11 @@ combined-stream@^1.0.8:
   dependencies:
     delayed-stream "~1.0.0"
 
+concat-map@0.0.1:
+  version "0.0.1"
+  resolved "https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b"
+  integrity sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==
+
 content-disposition@0.5.4:
   version "0.5.4"
   resolved "https://registry.yarnpkg.com/content-disposition/-/content-disposition-0.5.4.tgz#8b82b4efac82512a02bb0b1dcec9d2c5e8eb5bfe"
@@ -334,6 +373,11 @@ destroy@1.2.0:
   resolved "https://registry.yarnpkg.com/destroy/-/destroy-1.2.0.tgz#4803735509ad8be552934c67df614f94e66fa015"
   integrity sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==
 
+detect-node@^2.0.4, detect-node@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/detect-node/-/detect-node-2.1.0.tgz#c9c70775a49c3d03bc2c06d9a73be550f978f8b1"
+  integrity sha512-T0NIuQpnTvFDATNuHN5roPwSBG83rFsuO+MXXH9/3N1eFbn4wcPjttvjMLEPWJ0RGUYgQE7cGgS3tNxbqCGM7g==
+
 diff@^4.0.1:
   version "4.0.2"
   resolved "https://registry.yarnpkg.com/diff/-/diff-4.0.2.tgz#60f3aecb89d5fae520c11aa19efc2bb982aade7d"
@@ -450,6 +494,11 @@ fresh@0.5.2:
   resolved "https://registry.yarnpkg.com/fresh/-/fresh-0.5.2.tgz#3d8cadd90d976569fa835ab1f8e4b23a105605a7"
   integrity sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==
 
+fs.realpath@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f"
+  integrity sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==
+
 function-bind@^1.1.2:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/function-bind/-/function-bind-1.1.2.tgz#2c02d864d97f3ea6c8830c464cbd11ab6eab7a1c"
@@ -466,6 +515,18 @@ get-intrinsic@^1.1.3, get-intrinsic@^1.2.4:
     has-symbols "^1.0.3"
     hasown "^2.0.0"
 
+glob@^7.1.3:
+  version "7.2.3"
+  resolved "https://registry.yarnpkg.com/glob/-/glob-7.2.3.tgz#b8df0fb802bbfa8e89bd1d938b4e16578ed44f2b"
+  integrity sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==
+  dependencies:
+    fs.realpath "^1.0.0"
+    inflight "^1.0.4"
+    inherits "2"
+    minimatch "^3.1.1"
+    once "^1.3.0"
+    path-is-absolute "^1.0.0"
+
 gopd@^1.0.1:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/gopd/-/gopd-1.0.1.tgz#29ff76de69dac7489b7c0918a5788e56477c332c"
@@ -515,7 +576,15 @@ iconv-lite@0.4.24:
   dependencies:
     safer-buffer ">= 2.1.2 < 3"
 
-inherits@2.0.4:
+inflight@^1.0.4:
+  version "1.0.6"
+  resolved "https://registry.yarnpkg.com/inflight/-/inflight-1.0.6.tgz#49bd6331d7d02d0c09bc910a1075ba8165b56df9"
+  integrity sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==
+  dependencies:
+    once "^1.3.0"
+    wrappy "1"
+
+inherits@2, inherits@2.0.4:
   version "2.0.4"
   resolved "https://registry.yarnpkg.com/inherits/-/inherits-2.0.4.tgz#0fa2c64f932917c3433a0ded55363aae37416b7c"
   integrity sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==
@@ -525,21 +594,29 @@ ipaddr.js@1.9.1:
   resolved "https://registry.yarnpkg.com/ipaddr.js/-/ipaddr.js-1.9.1.tgz#bff38543eeb8984825079ff3a2a8e6cbd46781b3"
   integrity sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==
 
+js-sha3@0.8.0:
+  version "0.8.0"
+  resolved "https://registry.yarnpkg.com/js-sha3/-/js-sha3-0.8.0.tgz#b9b7a5da73afad7dedd0f8c463954cbde6818840"
+  integrity sha512-gF1cRrHhIzNfToc802P800N8PpXS+evLLXfsVpowqmAFR9uwbi89WvXg2QspOmXL8QL86J4T1EpFu+yUkwJY3Q==
+
 kareem@2.6.3:
   version "2.6.3"
   resolved "https://registry.yarnpkg.com/kareem/-/kareem-2.6.3.tgz#23168ec8ffb6c1abfd31b7169a6fb1dd285992ac"
   integrity sha512-C3iHfuGUXK2u8/ipq9LfjFfXFxAZMQJJq7vLS45r3D9Y2xQ/m4S8zaR4zMLFWh9AsNPXmcFfUDhTEO8UIC/V6Q==
 
-lodash@^4.17.21:
-  version "4.17.21"
-  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c"
-  integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
-
 make-error@^1.1.1:
   version "1.3.6"
   resolved "https://registry.yarnpkg.com/make-error/-/make-error-1.3.6.tgz#2eb2e37ea9b67c4891f684a1394799af484cf7a2"
   integrity sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==
 
+match-sorter@^6.0.2:
+  version "6.3.4"
+  resolved "https://registry.yarnpkg.com/match-sorter/-/match-sorter-6.3.4.tgz#afa779d8e922c81971fbcb4781c7003ace781be7"
+  integrity sha512-jfZW7cWS5y/1xswZo8VBOdudUiSd9nifYRWphc9M5D/ee4w4AoXLgBEdRbgVaxbMuagBPeUC5y2Hi8DO6o9aDg==
+  dependencies:
+    "@babel/runtime" "^7.23.8"
+    remove-accents "0.5.0"
+
 media-typer@0.3.0:
   version "0.3.0"
   resolved "https://registry.yarnpkg.com/media-typer/-/media-typer-0.3.0.tgz#8710d7af0aa626f8fffa1ce00168545263255748"
@@ -560,6 +637,11 @@ methods@~1.1.2:
   resolved "https://registry.yarnpkg.com/methods/-/methods-1.1.2.tgz#5529a4d67654134edcc5266656835b0f851afcee"
   integrity sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==
 
+microseconds@0.2.0:
+  version "0.2.0"
+  resolved "https://registry.yarnpkg.com/microseconds/-/microseconds-0.2.0.tgz#233b25f50c62a65d861f978a4a4f8ec18797dc39"
+  integrity sha512-n7DHHMjR1avBbSpsTBj6fmMGh2AGrifVV4e+WYc3Q9lO+xnSZ3NyhcBND3vzzatt05LFhoKFRxrIyklmLlUtyA==
+
 mime-db@1.52.0:
   version "1.52.0"
   resolved "https://registry.yarnpkg.com/mime-db/-/mime-db-1.52.0.tgz#bbabcdc02859f4987301c856e3387ce5ec43bf70"
@@ -577,6 +659,13 @@ mime@1.6.0:
   resolved "https://registry.yarnpkg.com/mime/-/mime-1.6.0.tgz#32cd9e5c64553bd58d19a568af452acff04981b1"
   integrity sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==
 
+minimatch@^3.1.1:
+  version "3.1.2"
+  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-3.1.2.tgz#19cd194bfd3e428f049a70817c038d89ab4be35b"
+  integrity sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==
+  dependencies:
+    brace-expansion "^1.1.7"
+
 mongodb-connection-string-url@^3.0.0:
   version "3.0.1"
   resolved "https://registry.yarnpkg.com/mongodb-connection-string-url/-/mongodb-connection-string-url-3.0.1.tgz#c13e6ac284ae401752ebafdb8cd7f16c6723b141"
@@ -645,6 +734,13 @@ ms@2.1.3:
   resolved "https://registry.yarnpkg.com/ms/-/ms-2.1.3.tgz#574c8138ce1d2b5861f0b44579dbadd60c6615b2"
   integrity sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==
 
+nano-time@1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/nano-time/-/nano-time-1.0.0.tgz#b0554f69ad89e22d0907f7a12b0993a5d96137ef"
+  integrity sha512-flnngywOoQ0lLQOTRNexn2gGSNuM9bKj9RZAWSzhQ+UJYaAFG9bac4DW9VHjUAzrOaIcajHybCTHe/bkvozQqA==
+  dependencies:
+    big-integer "^1.6.16"
+
 negotiator@0.6.3:
   version "0.6.3"
   resolved "https://registry.yarnpkg.com/negotiator/-/negotiator-0.6.3.tgz#58e323a72fedc0d6f9cd4d31fe49f51479590ccd"
@@ -660,6 +756,11 @@ object-inspect@^1.13.1:
   resolved "https://registry.yarnpkg.com/object-inspect/-/object-inspect-1.13.2.tgz#dea0088467fb991e67af4058147a24824a3043ff"
   integrity sha512-IRZSRuzJiynemAXPYtPe5BoI/RESNYR7TYm50MC5Mqbd3Jmw5y790sErYw3V6SryFJD64b74qQQs9wn5Bg/k3g==
 
+oblivious-set@1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/oblivious-set/-/oblivious-set-1.0.0.tgz#c8316f2c2fb6ff7b11b6158db3234c49f733c566"
+  integrity sha512-z+pI07qxo4c2CulUHCDf9lcqDlMSo72N/4rLUpRXf6fu+q8vjt8y0xS+Tlf8NTJDdTXHbdeO1n3MlbctwEoXZw==
+
 on-finished@2.4.1:
   version "2.4.1"
   resolved "https://registry.yarnpkg.com/on-finished/-/on-finished-2.4.1.tgz#58c8c44116e54845ad57f14ab10b03533184ac3f"
@@ -679,11 +780,23 @@ on-headers@~1.0.2:
   resolved "https://registry.yarnpkg.com/on-headers/-/on-headers-1.0.2.tgz#772b0ae6aaa525c399e489adfad90c403eb3c28f"
   integrity sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==
 
+once@^1.3.0:
+  version "1.4.0"
+  resolved "https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1"
+  integrity sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==
+  dependencies:
+    wrappy "1"
+
 parseurl@~1.3.3:
   version "1.3.3"
   resolved "https://registry.yarnpkg.com/parseurl/-/parseurl-1.3.3.tgz#9da19e7bee8d12dff0513ed5b76957793bc2e8d4"
   integrity sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==
 
+path-is-absolute@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f"
+  integrity sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==
+
 path-to-regexp@0.1.7:
   version "0.1.7"
   resolved "https://registry.yarnpkg.com/path-to-regexp/-/path-to-regexp-0.1.7.tgz#df604178005f522f15eb4490e7247a1bfaa67f8c"
@@ -729,6 +842,32 @@ raw-body@2.5.2:
     iconv-lite "0.4.24"
     unpipe "1.0.0"
 
+react-query@^3.39.3:
+  version "3.39.3"
+  resolved "https://registry.yarnpkg.com/react-query/-/react-query-3.39.3.tgz#4cea7127c6c26bdea2de5fb63e51044330b03f35"
+  integrity sha512-nLfLz7GiohKTJDuT4us4X3h/8unOh+00MLb2yJoGTPjxKs2bc1iDhkNx2bd5MKklXnOD3NrVZ+J2UXujA5In4g==
+  dependencies:
+    "@babel/runtime" "^7.5.5"
+    broadcast-channel "^3.4.1"
+    match-sorter "^6.0.2"
+
+regenerator-runtime@^0.14.0:
+  version "0.14.1"
+  resolved "https://registry.yarnpkg.com/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz#356ade10263f685dda125100cd862c1db895327f"
+  integrity sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==
+
+remove-accents@0.5.0:
+  version "0.5.0"
+  resolved "https://registry.yarnpkg.com/remove-accents/-/remove-accents-0.5.0.tgz#77991f37ba212afba162e375b627631315bed687"
+  integrity sha512-8g3/Otx1eJaVD12e31UbJj1YzdtVvzH85HV7t+9MJYk/u3XmkOUJ5Ys9wQrf9PCPK8+xn4ymzqYCiZl6QWKn+A==
+
+rimraf@3.0.2:
+  version "3.0.2"
+  resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-3.0.2.tgz#f1a5402ba6220ad52cc1282bac1ae3aa49fd061a"
+  integrity sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==
+  dependencies:
+    glob "^7.1.3"
+
 safe-buffer@5.1.2:
   version "5.1.2"
   resolved "https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.1.2.tgz#991ec69d296e0313747d59bdfd2b745c35f8828d"
@@ -866,6 +1005,14 @@ undici-types@~5.26.4:
   resolved "https://registry.yarnpkg.com/undici-types/-/undici-types-5.26.5.tgz#bcd539893d00b56e964fd2657a4866b221a65617"
   integrity sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==
 
+unload@2.2.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/unload/-/unload-2.2.0.tgz#ccc88fdcad345faa06a92039ec0f80b488880ef7"
+  integrity sha512-B60uB5TNBLtN6/LsgAf3udH9saB5p7gqJwcFfbOEZ8BcBHnGwCf6G/TGiEqkRAxX7zAFIUtzdrXQSdL3Q/wqNA==
+  dependencies:
+    "@babel/runtime" "^7.6.2"
+    detect-node "^2.0.4"
+
 unpipe@1.0.0, unpipe@~1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/unpipe/-/unpipe-1.0.0.tgz#b2bf4ee8514aae6165b4817829d21b2ef49904ec"
@@ -899,6 +1046,11 @@ whatwg-url@^13.0.0:
     tr46 "^4.1.1"
     webidl-conversions "^7.0.0"
 
+wrappy@1:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f"
+  integrity sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==
+
 yn@3.1.1:
   version "3.1.1"
   resolved "https://registry.yarnpkg.com/yn/-/yn-3.1.1.tgz#1e87401a09d767c1d5eab26a6e4c185182d2eb50"
